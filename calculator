import 'package:flutter/widgets.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        appBarTheme: AppBarTheme(),
        useMaterial3: true,
        inputDecorationTheme: InputDecorationTheme(
          hintStyle: TextStyle(color: Colors.amber),
        ),
      ),
      home: const MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key});

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String num1 = "";
  String num2 = "";
  String total = "";
  String op = '';
  TextEditingController textEditingController1 = TextEditingController();
  TextEditingController textEditingController2 = TextEditingController();
  TextEditingController opController = TextEditingController();
  FocusNode focusNode1 = FocusNode();
  FocusNode focusNode2 = FocusNode();
  FocusNode opFocusNode = FocusNode();
  late FocusNode currentFocus;

  @override
  void initState() {
    super.initState();
    currentFocus = focusNode1;
  }

  void calculateResult() {
    setState(() {
      if (num1.isNotEmpty && num2.isNotEmpty && op.isNotEmpty) {
        double n1 = double.parse(num1);
        double n2 = double.parse(num2);

        if (op == "+") {
          total = (n1 + n2).toString();
        } else if (op == "-") {
          total = (n1 - n2).toString();
        } else if (op == "*") {
          total = (n1 * n2).toString();
        } else if (op == "/") {
          total = (n1 / n2).toString();
        } else {
          total = "Invalid operation";
        }
      } else {
        total = "Please enter valid inputs";
      }
    });
  }

  void addToNum(String digit) {
    setState(() {
      if (currentFocus == focusNode1) {
        num1 += digit;
        textEditingController1.text = num1;
      } else if (currentFocus == focusNode2) {
        num2 += digit;
        textEditingController2.text = num2;
      } else if (currentFocus == opFocusNode) {
        op = digit;
        opController.text = op;
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          "Calculator",
          style: TextStyle(
            fontSize: 30,
            fontWeight: FontWeight.bold,
            color: Colors.lime.shade900.withOpacity(0.25),
          ),
        ),
        centerTitle: true,
      ),
      body: ListView(
        padding: EdgeInsets.all(20),
        children: [
          SizedBox(height: 20),
          Container(
            margin: EdgeInsets.symmetric(horizontal: 20),
            child: TextField(
              controller: textEditingController1,
              focusNode: focusNode1,
              onTap: () {
                setState(() {
                  currentFocus = focusNode1;
                });
              },
              style: TextStyle(color: Colors.green),
              decoration: InputDecoration(
                contentPadding: EdgeInsets.symmetric(vertical: 10.0, horizontal: 15.0),
                labelText: "First Number",
                labelStyle: TextStyle(fontSize: 20, color: Colors.blue),
                border: OutlineInputBorder(),
              ),
            ),
          ),
          SizedBox(height: 20),
          Container(
            margin: EdgeInsets.symmetric(horizontal: 20),
            child: TextField(
              controller: opController,
              focusNode: opFocusNode,
              onTap: () {
                setState(() {
                  currentFocus = opFocusNode;
                });
              },
              style: TextStyle(color: Colors.green),
              decoration: InputDecoration(
                contentPadding: EdgeInsets.symmetric(vertical: 10.0, horizontal: 15.0),
                labelText: "Operation",
                labelStyle: TextStyle(fontSize: 20, color: Colors.blue),
                border: OutlineInputBorder(),
              ),
            ),
          ),
          SizedBox(height: 20),
          Container(
            margin: EdgeInsets.symmetric(horizontal: 20),
            child: TextField(
              controller: textEditingController2,
              focusNode: focusNode2,
              onTap: () {
                setState(() {
                  currentFocus = focusNode2;
                });
              },
              style: TextStyle(color: Colors.green),
              decoration: InputDecoration(
                contentPadding: EdgeInsets.symmetric(vertical: 10.0, horizontal: 15.0),
                labelText: "Second Number",
                labelStyle: TextStyle(fontSize: 20, color: Colors.blue),
                border: OutlineInputBorder(),
              ),
            ),
          ),
          SizedBox(height: 20),
          Text(
            total.isEmpty ? "" : "Result: $total",
            style: TextStyle(fontSize: 32),
            textAlign: TextAlign.center,
          ),
          SizedBox(height: 20),
          GridView.count(
            crossAxisCount: 4,
            mainAxisSpacing: 1,
            crossAxisSpacing: 2,
            shrinkWrap: true,
            physics: NeverScrollableScrollPhysics(),
            children: [
              for (int i = 0; i < 10; i++) numbersButton(i),
              opButton('*'),
              opButton('/'),
              opButton('-'),
              opButton('+'),
              twoButtons('C', Colors.amber),
              twoButtons('=', Colors.green),
            ],
          ),
        ],
      ),
    );
  }

  Widget numbersButton(int num) {
    return InkWell(
      onTap: () {
        addToNum(num.toString());
      },
      child: Container(
        margin: EdgeInsets.all(4.0),
        decoration: BoxDecoration(
          color: Colors.red,
          border: Border.all(color: Colors.black, width: 2.0),
          borderRadius: BorderRadius.circular(8.0),
        ),
        alignment: Alignment.center,
        child: Text(
          "$num",
          style: TextStyle(
            color: Colors.white,
            fontSize: 20,
            fontWeight: FontWeight.bold,
          ),
        ),
      ),
    );
  }

  Widget opButton(String operation) {
    return InkWell(
      onTap: () {
        setState(() {
          op = operation;
          opController.text = op;
        });
      },
      child: Container(
        margin: EdgeInsets.all(4.0),
        decoration: BoxDecoration(
          color: Colors.blue,
          border: Border.all(color: Colors.black, width: 2.0),
          borderRadius: BorderRadius.circular(8.0),
        ),
        alignment: Alignment.center,
        child: Text(
          "$operation",
          style: TextStyle(
            color: Colors.white,
            fontSize: 20,
            fontWeight: FontWeight.bold,
          ),
        ),
      ),
    );
  }

  Widget twoButtons(String button, Color color) {
    return InkWell(
      onTap: () {
        if (button == "=") {
          calculateResult();
        } else {
          setState(() {
            total = "";
            num1 = '';
            num2 = '';
            op = '';
            textEditingController1.clear();
            textEditingController2.clear();
            opController.clear();
          });
        }
      },
      child: Container(
        margin: EdgeInsets.all(4.0),
        decoration: BoxDecoration(
          color: color,
          border: Border.all(color: Colors.black, width: 2.0),
          borderRadius: BorderRadius.circular(8.0),
        ),
        alignment: Alignment.center,
        child: Text(
          "$button",
          style: TextStyle(
            color: Colors.white,
            fontSize: 20,
            fontWeight: FontWeight.bold,
          ),
        ),
      ),
    );
  }
}
